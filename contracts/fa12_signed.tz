parameter (or (or (or (pair %approve (address %spender) (nat %value)) (or (pair %burn (address %address) (nat %value)) (pair %getAdministrator unit (contract address)))) (or (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)) (pair %getBalance address (contract nat))) (or (pair %getTotalSupply unit (contract nat)) (pair %mint (address %address) (nat %value))))) (or (or (or (pair %mint_incoming (pair (address %address) (signature %signature)) (pair (address %signer) (nat %value))) (pair %send_to_cosmos (pair (nat %_amount) (string %_dest_chain)) (pair (string %_receiver) (pair (string %_src_chain) (address %from_))))) (or (address %setAdministrator) (bool %setPause))) (or (or (pair %transfer (address %from) (pair (address %to) (nat %value))) (pair %update_metadata (string %key) (bytes %value))) (or (pair %update_tx_status (int %_tx_id) (string %status)) (key %white_list)))));
storage   (pair (pair (pair (address %administrator) (big_map %balances address (pair (map %approvals address nat) (nat %balance)))) (pair (int %counter) (big_map %key_mapper address key))) (pair (pair (big_map %metadata string bytes) (bool %paused)) (pair (map %pending_cosmos_txs int (pair (pair (pair (nat %amount) (bool %approval)) (pair (address %approver) (pair (string %cosmos_receiver) (string %dest_chain)))) (pair (pair (string %src_chain) (timestamp %time_stamp)) (pair (int %tx_id) (pair (string %tx_status) (address %tz_sender)))))) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))));
code
  {
    CAST (pair (or (or (or (pair address nat) (or (pair address nat) (pair unit (contract address)))) (or (or (pair (pair address address) (contract nat)) (pair address (contract nat))) (or (pair unit (contract nat)) (pair address nat)))) (or (or (or (pair (pair address signature) (pair address nat)) (pair (pair nat string) (pair string (pair string address)))) (or address bool)) (or (or (pair address (pair address nat)) (pair string bytes)) (or (pair int string) key)))) (pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))))); # pair (or (or (or (pair address nat) (or (pair address nat) (pair unit (contract address)))) (or (or (pair (pair address address) (contract nat)) (pair address (contract nat))) (or (pair unit (contract nat)) (pair address nat)))) (or (or (or (pair (pair address signature) (pair address nat)) (pair (pair nat string) (pair string (pair string address)))) (or address bool)) (or (or (pair address (pair address nat)) (pair string bytes)) (or (pair int string) key)))) (pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))))
    UNPAIR;     # or (or (or (pair address nat) (or (pair address nat) (pair unit (contract address)))) (or (or (pair (pair address address) (contract nat)) (pair address (contract nat))) (or (pair unit (contract nat)) (pair address nat)))) (or (or (or (pair (pair address signature) (pair address nat)) (pair (pair nat string) (pair string (pair string address)))) (or address bool)) (or (or (pair address (pair address nat)) (pair string bytes)) (or (pair int string) key))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                # == approve ==
                # if ~ (self.data.balances.contains(sp.sender)): # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                CDR;        # big_map address (pair (map address nat) nat) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                MEM;        # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                IF
                  {}
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    # self.data.balances[sp.sender] = sp.record(approvals = {}, balance = 0) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SENDER;     # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    SWAP;       # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                # sp.verify(~ self.data.paused, 'FA1.2_Paused') # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                GET 3;      # pair (big_map string bytes) bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                CDR;        # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                IF
                  {
                    PUSH string "FA1.2_Paused"; # string : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    FAILWITH;   # FAILED
                  }
                  {}; # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                # sp.verify((self.data.balances[sp.sender].approvals.get(params.spender, default_value = 0) == 0) | (params.value == 0), 'FA1.2_UnsafeAllowanceChange') # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                PUSH nat 0; # nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                CDR;        # big_map address (pair (map address nat) nat) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                GET;        # option (pair (map address nat) nat) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                IF_SOME
                  {
                    # of_some: Get-item:112 # @some : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    PUSH int 112; # int : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    FAILWITH;   # FAILED
                  }; # @some : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                CAR;        # map address nat : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                DUP 3;      # pair address nat : map address nat : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                CAR;        # address : map address nat : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                GET;        # option nat : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                IF_SOME
                  {
                    # of_some: Get-item:112 # @some : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    PUSH nat 0; # nat : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # nat : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                COMPARE;    # int : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                EQ;         # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                IF
                  {
                    PUSH bool True; # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    DUP;        # pair address nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PUSH nat 0; # nat : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                IF
                  {}
                  {
                    PUSH string "FA1.2_UnsafeAllowanceChange"; # string : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    FAILWITH;   # FAILED
                  }; # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                # self.data.balances[sp.sender].approvals[params.spender] = params.value # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                DUP;        # @sender : @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                DUG 2;      # @sender : big_map address (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                GET;        # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                IF_SOME
                  {}
                  {
                    PUSH int 114; # int : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    FAILWITH;   # FAILED
                  }; # @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                DUP;        # @some : @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                CAR;        # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                DUP 8;      # pair address nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                CDR;        # nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                SOME;       # option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                DIG 8;      # pair address nat : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                CAR;        # address : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                UPDATE;     # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                UPDATE 1;   # @some : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SOME;       # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SWAP;       # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                NIL operation; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    # == burn ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # sp.verify(self.data.balances[params.address].balance >= params.value, 'FA1.2_InsufficientBalance') # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair address nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 3;      # pair address nat : big_map address (pair (map address nat) nat) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET;        # option (pair (map address nat) nat) : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_SOME
                      {
                        # of_some: Get-item:160 # @some : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        PUSH int 160; # int : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # @some : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # nat : nat : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GE;         # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_InsufficientBalance"; # string : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    # self.data.balances[params.address].balance = sp.as_nat(self.data.balances[params.address].balance - params.value) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 6;      # pair address nat : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_SOME
                      {}
                      {
                        PUSH int 161; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 7;      # pair address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 8;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    CDR;        # big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    DUP 9;      # pair address nat : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    CAR;        # address : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    GET;        # option (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    IF_SOME
                      {
                        # of_some: Get-item:161 # @some : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                      }
                      {
                        PUSH int 161; # int : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        FAILWITH;   # FAILED
                      }; # @some : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SUB;        # int : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    ISNAT;      # option nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    IF_SOME
                      {}
                      {
                        PUSH int 161; # int : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        FAILWITH;   # FAILED
                      }; # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    # self.data.totalSupply = sp.as_nat(self.data.totalSupply - params.value) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 8;      # nat : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SUB;        # int : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    ISNAT;      # option nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_SOME
                      {}
                      {
                        PUSH int 162; # int : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # @some : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UPDATE 8;   # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    NIL operation; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair unit (contract address)
                    # == getAdministrator ==
                    # sp.result(self.data.administrator) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair unit (contract address)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair unit (contract address)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair unit (contract address) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair unit (contract address) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair unit (contract address) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : pair unit (contract address) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # sp.transfer(__s1.value, sp.tez(0), sp.snd(params)) # address : pair unit (contract address) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    NIL operation; # list operation : address : pair unit (contract address) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 2;      # pair unit (contract address) : list operation : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # contract address : list operation : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PUSH mutez 0; # mutez : contract address : list operation : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 3;      # address : mutez : contract address : list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CONS;       # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address address) (contract nat)
                    # == getAllowance ==
                    # if self.data.balances.contains(sp.fst(params).owner): # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address address) (contract nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address address) (contract nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair (pair address address) (contract nat) : pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address address : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    MEM;        # bool : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address address) (contract nat)
                        # sp.result(self.data.balances[sp.fst(params).owner].approvals.get(sp.fst(params).spender, default_value = 0)) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address address) (contract nat)
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address address) (contract nat)
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CDR;        # big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # pair (pair address address) (contract nat) : pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUG 2;      # pair (pair address address) (contract nat) : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair address address : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # address : big_map address (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option (pair (map address nat) nat) : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {
                            # of_some: Get-item:130 # @some : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            PUSH int 130; # int : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # map address nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # pair (pair address address) (contract nat) : map address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # pair (pair address address) (contract nat) : pair (pair address address) (contract nat) : map address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUG 2;      # pair (pair address address) (contract nat) : map address nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair address address : map address nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CDR;        # address : map address nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {
                            # of_some: Get-item:130 # @some : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            PUSH nat 0; # nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }; # nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        # sp.result(0) # pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        PUSH nat 0; # nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # sp.transfer(__s2.value, sp.tez(0), sp.snd(params)) # nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    NIL operation; # list operation : nat : pair (pair address address) (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 2;      # pair (pair address address) (contract nat) : list operation : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # contract nat : list operation : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CONS;       # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (contract nat)
                    # == getBalance ==
                    # if self.data.balances.contains(sp.fst(params)): # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (contract nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (contract nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair address (contract nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair address (contract nat) : pair address (contract nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # pair address (contract nat) : big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    MEM;        # bool : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (contract nat)
                        # sp.result(self.data.balances[sp.fst(params)].balance) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (contract nat)
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (contract nat)
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CDR;        # big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # pair address (contract nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # pair address (contract nat) : pair address (contract nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUG 2;      # pair address (contract nat) : big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # address : big_map address (pair (map address nat) nat) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option (pair (map address nat) nat) : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {
                            # of_some: Get-item:123 # @some : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            PUSH int 123; # int : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CDR;        # nat : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        # sp.result(0) # pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        PUSH nat 0; # nat : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # nat : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # sp.transfer(__s3.value, sp.tez(0), sp.snd(params)) # nat : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    NIL operation; # list operation : nat : pair address (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 2;      # pair address (contract nat) : list operation : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # contract nat : list operation : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CONS;       # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair unit (contract nat)
                    # == getTotalSupply ==
                    # sp.result(self.data.totalSupply) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair unit (contract nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair unit (contract nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair unit (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 8;      # nat : pair unit (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # sp.transfer(__s4.value, sp.tez(0), sp.snd(params)) # nat : pair unit (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    NIL operation; # list operation : nat : pair unit (contract nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 2;      # pair unit (contract nat) : list operation : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # contract nat : list operation : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CONS;       # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    # == mint ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    # if ~ (self.data.balances.contains(params.address)): # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair address nat : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair address nat : pair address nat : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # pair address nat : big_map address (pair (map address nat) nat) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    MEM;        # bool : pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                        # self.data.balances[params.address] = sp.record(approvals = {}, balance = 0) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                        UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        DUP 6;      # pair address nat : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                        SWAP;       # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # pair address nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    # self.data.balances[params.address].balance += params.value # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    DUP 6;      # pair address nat : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    IF_SOME
                      {}
                      {
                        PUSH int 153; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    DUP 8;      # pair address nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address nat
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    # self.data.totalSupply += params.value # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    GET 8;      # nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address nat
                    DIG 2;      # pair address nat : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # nat : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    ADD;        # nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UPDATE 8;   # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    NIL operation; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    # == mint_incoming ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    # sp.verify(self.data.key_mapper.contains(params.signer)) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 4;      # big_map address key : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair address signature) (pair address nat) : big_map address key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair (pair address signature) (pair address nat) : pair (pair address signature) (pair address nat) : big_map address key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # pair (pair address signature) (pair address nat) : big_map address key : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # address : big_map address key : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    MEM;        # bool : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: self.data.key_mapper.contains(params.signer)"; # string : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # sp.verify(sp.check_signature(self.data.key_mapper[params.signer], params.signature, sp.pack('Mint'))) # pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PUSH string "Mint"; # string : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PACK;       # bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair address signature) (pair address nat) : bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair (pair address signature) (pair address nat) : pair (pair address signature) (pair address nat) : bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # pair (pair address signature) (pair address nat) : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 4;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 4;      # big_map address key : signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 4;      # pair (pair address signature) (pair address nat) : big_map address key : signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # address : big_map address key : signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET;        # option key : signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_SOME
                      {
                        # of_some: Get-item:387 # @some : signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        PUSH int 387; # int : signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # @some : signature : bytes : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CHECK_SIGNATURE; # bool : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.check_signature(self.data.key_mapper[params.signer], params.signature, sp.pack('Mint'))"; # string : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    # if ~ (self.data.balances.contains(params.address)): # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair address signature) (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair (pair address signature) (pair address nat) : pair (pair address signature) (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # pair (pair address signature) (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address signature : big_map address (pair (map address nat) nat) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    MEM;        # bool : pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                        # self.data.balances[params.address] = sp.record(approvals = {}, balance = 0) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                        UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        DUP 6;      # pair (pair address signature) (pair address nat) : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        CAR;        # pair address signature : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                        SWAP;       # pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # pair (pair address signature) (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    # self.data.balances[params.address].balance += params.value # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    DUP 6;      # pair (pair address signature) (pair address nat) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    CAR;        # pair address signature : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    IF_SOME
                      {}
                      {
                        PUSH int 371; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    DUP 8;      # pair (pair address signature) (pair address nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    GET 4;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address signature) (pair address nat)
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    # self.data.totalSupply += params.value # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    GET 8;      # nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair address signature) (pair address nat)
                    DIG 2;      # pair (pair address signature) (pair address nat) : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 4;      # nat : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    ADD;        # nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UPDATE 8;   # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    # == send_to_cosmos ==
                    # sp.verify(params._amount != 0, 'sending amount is 0') # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair (pair nat string) (pair string (pair string address)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair nat string : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PUSH nat 0; # nat : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    NEQ;        # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "sending amount is 0"; # string : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    # sp.verify(((~ self.data.paused) & (params.from_ == sp.sender)) | (self.data.balances[params.from_].approvals[sp.sender] >= params._amount), 'FA1.2_NotAllowed') # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # pair (big_map string bytes) bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {
                        PUSH bool False; # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        DUP;        # pair (pair nat string) (pair string (pair string address)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET 6;      # address : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SENDER;     # @sender : address : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        COMPARE;    # int : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        EQ;         # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {
                        PUSH bool True; # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        DUP;        # pair (pair nat string) (pair string (pair string address)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair nat string : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CDR;        # big_map address (pair (map address nat) nat) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP 3;      # pair (pair nat string) (pair string (pair string address)) : big_map address (pair (map address nat) nat) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET 6;      # address : big_map address (pair (map address nat) nat) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option (pair (map address nat) nat) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {
                            # of_some: Get-item:320 # @some : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            PUSH int 320; # int : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # map address nat : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SENDER;     # @sender : map address nat : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option nat : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {
                            # of_some: Get-item:320 # @some : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            PUSH int 320; # int : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        COMPARE;    # int : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GE;         # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAllowed"; # string : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    # if ~ (self.data.balances.contains(params.from_)): # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair nat string) (pair string (pair string address)) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair (pair nat string) (pair string (pair string address)) : pair (pair nat string) (pair string (pair string address)) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # pair (pair nat string) (pair string (pair string address)) : big_map address (pair (map address nat) nat) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 6;      # address : big_map address (pair (map address nat) nat) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    MEM;        # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                        # self.data.balances[params.from_] = sp.record(approvals = {}, balance = 0) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                        UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        DUP 6;      # pair (pair nat string) (pair string (pair string address)) : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        GET 6;      # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                        SWAP;       # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # sp.verify(self.data.balances[params.from_].balance >= params._amount, 'FA1.2_InsufficientBalance') # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair (pair nat string) (pair string (pair string address)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair nat string : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 3;      # pair (pair nat string) (pair string (pair string address)) : big_map address (pair (map address nat) nat) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 6;      # address : big_map address (pair (map address nat) nat) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET;        # option (pair (map address nat) nat) : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_SOME
                      {
                        # of_some: Get-item:323 # @some : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        PUSH int 323; # int : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # @some : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # nat : nat : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GE;         # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_InsufficientBalance"; # string : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    # self.data.balances[params.from_].balance = sp.as_nat(self.data.balances[params.from_].balance - params._amount) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 6;      # pair (pair nat string) (pair string (pair string address)) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 6;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_SOME
                      {}
                      {
                        PUSH int 324; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 7;      # pair (pair nat string) (pair string (pair string address)) : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair nat string : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 8;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    CDR;        # big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    DUP 9;      # pair (pair nat string) (pair string (pair string address)) : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    GET 6;      # address : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    GET;        # option (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    IF_SOME
                      {
                        # of_some: Get-item:324 # @some : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                      }
                      {
                        PUSH int 324; # int : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        FAILWITH;   # FAILED
                      }; # @some : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    SUB;        # int : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    ISNAT;      # option nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    IF_SOME
                      {}
                      {
                        PUSH int 324; # int : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        FAILWITH;   # FAILED
                      }; # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                    SWAP;       # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # _approval = sp.local("_approval", False) # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PUSH bool False; # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # _approval_address = sp.local("_approval_address", sp.sender)
                    # if params.from_ != sp.sender: # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 3;      # pair (pair nat string) (pair string (pair string address)) : @sender : bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 6;      # address : @sender : bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    NEQ;        # bool : bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {
                        DROP;       # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                        # self.data.balances[params.from_].approvals[sp.sender] = sp.as_nat(self.data.balances[params.from_].approvals[sp.sender] - params._amount) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP 6;      # pair (pair nat string) (pair string (pair string address)) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET 6;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {}
                          {
                            PUSH int 330; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP 8;      # pair (pair nat string) (pair string (pair string address)) : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair nat string : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DIG 9;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        CDR;        # big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        DUP 10;     # pair (pair nat string) (pair string (pair string address)) : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        GET 6;      # address : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        GET;        # option (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        IF_SOME
                          {
                            # of_some: Get-item:330 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                          }
                          {
                            PUSH int 330; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                            FAILWITH;   # FAILED
                          }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        CAR;        # map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        SENDER;     # @sender : map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        GET;        # option nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        IF_SOME
                          {
                            # of_some: Get-item:330 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                          }
                          {
                            PUSH int 330; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                            FAILWITH;   # FAILED
                          }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        SUB;        # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        ISNAT;      # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        IF_SOME
                          {}
                          {
                            PUSH int 330; # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                            FAILWITH;   # FAILED
                          }; # @some : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        SOME;       # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        SENDER;     # @sender : option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        UPDATE;     # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        UPDATE 1;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair nat string) (pair string (pair string address))
                        PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair nat string) (pair string (pair string address))
                        SWAP;       # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        # _approval.value = True # pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        PUSH bool True; # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        # _approval_address.value = params.from_ # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {}; # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # _tx_id = sp.local("_tx_id", self.data.counter) # bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # int : bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # self.data.counter += 1 # int : bool : pair (pair nat string) (pair string (pair string address)) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : int : bool : pair (pair nat string) (pair string (pair string address))
                    UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : int : bool : pair (pair nat string) (pair string (pair string address))
                    SWAP;       # pair int (big_map address key) : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : int : bool : pair (pair nat string) (pair string (pair string address))
                    UNPAIR;     # int : big_map address key : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PUSH int 1; # int : int : big_map address key : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : int : bool : pair (pair nat string) (pair string (pair string address))
                    ADD;        # int : big_map address key : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair int (big_map address key) : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : int : bool : pair (pair nat string) (pair string (pair string address))
                    SWAP;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    # self.data.pending_cosmos_txs[_tx_id.value] = sp.record(amount = params._amount, approval = _approval.value, approver = params.from_, cosmos_receiver = params._receiver, dest_chain = params._dest_chain, src_chain = params._src_chain, time_stamp = sp.timestamp(1624710155), tx_id = _tx_id.value, tx_status = 'Initiated', tz_sender = sp.sender) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    GET 5;      # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    SENDER;     # @sender : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PUSH string "Initiated"; # string : @sender : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair string @sender : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    DUP 4;      # int : pair string @sender : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair int (pair string @sender) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PUSH timestamp "2021-06-26T12:22:35Z"; # timestamp : pair int (pair string @sender) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    DUP 7;      # pair (pair nat string) (pair string (pair string address)) : timestamp : pair int (pair string @sender) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    GET 5;      # string : timestamp : pair int (pair string @sender) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair string timestamp : pair int (pair string @sender) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    DIG 5;      # pair (pair nat string) (pair string (pair string address)) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool
                    DUP;        # pair (pair nat string) (pair string (pair string address)) : pair (pair nat string) (pair string (pair string address)) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool
                    CAR;        # pair nat string : pair (pair nat string) (pair string (pair string address)) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool
                    CDR;        # string : pair (pair nat string) (pair string (pair string address)) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool
                    SWAP;       # pair (pair nat string) (pair string (pair string address)) : string : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool
                    DUP;        # pair (pair nat string) (pair string (pair string address)) : pair (pair nat string) (pair string (pair string address)) : string : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool
                    DUG 7;      # pair (pair nat string) (pair string (pair string address)) : string : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    GET 3;      # string : string : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair string string : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    DUP 7;      # pair (pair nat string) (pair string (pair string address)) : pair string string : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    GET 6;      # address : pair string string : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    PAIR;       # pair address (pair string string) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : bool : pair (pair nat string) (pair string (pair string address))
                    DIG 5;      # bool : pair address (pair string string) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int : pair (pair nat string) (pair string (pair string address))
                    DIG 6;      # pair (pair nat string) (pair string (pair string address)) : bool : pair address (pair string string) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int
                    CAR;        # pair nat string : bool : pair address (pair string string) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int
                    CAR;        # nat : bool : pair address (pair string string) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int
                    PAIR;       # pair nat bool : pair address (pair string string) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int
                    PAIR;       # pair (pair nat bool) (pair address (pair string string)) : pair (pair string timestamp) (pair int (pair string @sender)) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int
                    PAIR;       # pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string @sender))) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int
                    SOME;       # option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string @sender)))) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : int
                    DIG 3;      # int : option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string @sender)))) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UPDATE;     # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UPDATE 5;   # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : address
                    # == setAdministrator ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : address
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : address
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # address : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : address
                    # self.data.administrator = params # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : address
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address
                    UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address
                    CDR;        # big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address
                    DIG 3;      # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : bool
                    # == setPause ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : bool
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : bool
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # bool : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : bool
                    # self.data.paused = params # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : bool
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : bool
                    SWAP;       # pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : bool
                    UNPAIR;     # pair (big_map string bytes) bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : bool
                    CAR;        # big_map string bytes : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : bool
                    DIG 3;      # bool : big_map string bytes : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))
                    SWAP;       # big_map string bytes : bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))
                    PAIR;       # pair (big_map string bytes) bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))
                    PAIR;       # pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))
                    SWAP;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    # == transfer ==
                    # sp.verify((sp.sender == self.data.administrator) | ((~ self.data.paused) & ((params.from_ == sp.sender) | (self.data.balances[params.from_].approvals[sp.sender] >= params.value))), 'FA1.2_NotAllowed') # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {
                        PUSH bool True; # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET 3;      # pair (big_map string bytes) bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CDR;        # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF
                          {
                            PUSH bool False; # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            CAR;        # address : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            SENDER;     # @sender : address : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            COMPARE;    # int : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            EQ;         # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            IF
                              {
                                PUSH bool True; # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                              }
                              {
                                DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                GET 4;      # nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                CDR;        # big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                DUP 3;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                CAR;        # address : big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                GET;        # option (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                IF_SOME
                                  {
                                    # of_some: Get-item:95 # @some : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                  }
                                  {
                                    PUSH int 95; # int : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                CAR;        # map address nat : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                SENDER;     # @sender : map address nat : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                GET;        # option nat : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                IF_SOME
                                  {
                                    # of_some: Get-item:95 # @some : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                  }
                                  {
                                    PUSH int 95; # int : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                    FAILWITH;   # FAILED
                                  }; # @some : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                COMPARE;    # int : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                GE;         # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                              }; # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }; # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAllowed"; # string : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    # if ~ (self.data.balances.contains(params.from_)): # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    MEM;        # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        # self.data.balances[params.from_] = sp.record(approvals = {}, balance = 0) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        DUP 6;      # pair address (pair address nat) : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        SWAP;       # pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    # if ~ (self.data.balances.contains(params.to_)): # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # address : big_map address (pair (map address nat) nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    MEM;        # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        # self.data.balances[params.to_] = sp.record(approvals = {}, balance = 0) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        DUP 6;      # pair address (pair address nat) : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        GET 3;      # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        SWAP;       # pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # sp.verify(self.data.balances[params.from_].balance >= params.value, 'FA1.2_InsufficientBalance') # pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 4;      # nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 3;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET;        # option (pair (map address nat) nat) : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_SOME
                      {
                        # of_some: Get-item:101 # @some : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        PUSH int 101; # int : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # @some : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # nat : nat : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GE;         # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_InsufficientBalance"; # string : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    # self.data.balances[params.from_].balance = sp.as_nat(self.data.balances[params.from_].balance - params.value) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 6;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_SOME
                      {}
                      {
                        PUSH int 102; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 7;      # pair address (pair address nat) : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 4;      # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 8;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    CDR;        # big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    DUP 9;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    CAR;        # address : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    GET;        # option (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    IF_SOME
                      {
                        # of_some: Get-item:102 # @some : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                      }
                      {
                        PUSH int 102; # int : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        FAILWITH;   # FAILED
                      }; # @some : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    SUB;        # int : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    ISNAT;      # option nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    IF_SOME
                      {}
                      {
                        PUSH int 102; # int : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        FAILWITH;   # FAILED
                      }; # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    # self.data.balances[params.to_].balance += params.value # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    DUP 6;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    GET 3;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    IF_SOME
                      {}
                      {
                        PUSH int 103; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        FAILWITH;   # FAILED
                      }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    DUP 8;      # pair address (pair address nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    GET 4;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                    SWAP;       # pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # if (params.from_ != sp.sender) & (~ (sp.sender == self.data.administrator)): # pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair address (pair address nat) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    NEQ;        # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # address : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SENDER;     # @sender : address : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        COMPARE;    # int : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        NEQ;        # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        PUSH bool False; # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # bool : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        # self.data.balances[params.from_].approvals[sp.sender] = sp.as_nat(self.data.balances[params.from_].approvals[sp.sender] - params.value) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat)
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP 6;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {}
                          {
                            PUSH int 105; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP 8;      # pair address (pair address nat) : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET 4;      # nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DIG 9;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        CAR;        # pair address (big_map address (pair (map address nat) nat)) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        CDR;        # big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair address (pair address nat)
                        DIG 9;      # pair address (pair address nat) : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # address : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {
                            # of_some: Get-item:105 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }
                          {
                            PUSH int 105; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        CAR;        # map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SENDER;     # @sender : map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        GET;        # option nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {
                            # of_some: Get-item:105 # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                          }
                          {
                            PUSH int 105; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SUB;        # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        ISNAT;      # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        IF_SOME
                          {}
                          {
                            PUSH int 105; # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                            FAILWITH;   # FAILED
                          }; # @some : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SOME;       # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SENDER;     # @sender : option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        UPDATE;     # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        UPDATE 1;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                        PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        DROP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair string bytes
                    # == update_metadata ==
                    # sp.verify(sp.sender == self.data.administrator, 'FA1.2_NotAdmin') # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair string bytes
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair string bytes
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair string bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair string bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair string bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : pair string bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : pair string bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair string bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : pair string bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "FA1.2_NotAdmin"; # string : pair string bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair string bytes : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair string bytes
                    # self.data.metadata[params.key] = params.value # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair string bytes
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair string bytes
                    SWAP;       # pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair string bytes
                    UNPAIR;     # pair (big_map string bytes) bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair string bytes
                    UNPAIR;     # big_map string bytes : bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair string bytes
                    DUP 5;      # pair string bytes : big_map string bytes : bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair string bytes
                    CDR;        # bytes : big_map string bytes : bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair string bytes
                    SOME;       # option bytes : big_map string bytes : bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair string bytes
                    DIG 5;      # pair string bytes : option bytes : big_map string bytes : bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))
                    CAR;        # string : option bytes : big_map string bytes : bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))
                    UPDATE;     # big_map string bytes : bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))
                    PAIR;       # pair (big_map string bytes) bool : pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))
                    PAIR;       # pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))
                    SWAP;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                IF_LEFT
                  {
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                    # == update_tx_status ==
                    # sp.verify(sp.sender == self.data.administrator) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                    DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                    DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair address (big_map address (pair (map address nat) nat)) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # address : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.sender == self.data.administrator"; # string : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    # if params.status == 'Success': # pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # pair int string : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # string : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PUSH string "Success"; # string : string : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        # amt = sp.local("amt", self.data.pending_cosmos_txs[params._tx_id].amount) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET 5;      # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # pair int string : pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUG 2;      # pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # int : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {
                            # of_some: Get-item:346 # @some : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            PUSH int 346; # int : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair (pair nat bool) (pair address (pair string string)) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair nat bool : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        # del self.data.pending_cosmos_txs[params._tx_id] # nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DIG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair int string
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair int string
                        GET 5;      # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair int string
                        NONE (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))); # option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair int string
                        DIG 4;      # pair int string : option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat
                        CAR;        # int : option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat
                        UPDATE;     # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat
                        UPDATE 5;   # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat
                        # self.data.totalSupply = sp.as_nat(self.data.totalSupply - amt.value) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DIG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET 8;      # nat : nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SUB;        # int : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        ISNAT;      # option nat : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {}
                          {
                            PUSH int 348; # int : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        UPDATE 8;   # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        # amt = sp.local("amt", self.data.pending_cosmos_txs[params._tx_id].amount) # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        DUG 2;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET 5;      # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP;        # pair int string : pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUG 2;      # pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # int : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {
                            # of_some: Get-item:351 # @some : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            PUSH int 351; # int : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair (pair nat bool) (pair address (pair string string)) : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair nat bool : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        # approved = sp.local("approved", self.data.pending_cosmos_txs[params._tx_id].approval) # nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET 5;      # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        DUP 3;      # pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # int : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        GET;        # option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF_SOME
                          {
                            # of_some: Get-item:352 # @some : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            PUSH int 352; # int : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            FAILWITH;   # FAILED
                          }; # @some : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair (pair nat bool) (pair address (pair string string)) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # pair nat bool : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CDR;        # bool : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        # if approved.value: # bool : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        IF
                          {
                            # approver = sp.local("approver", self.data.pending_cosmos_txs[params._tx_id].approver) # nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            GET 5;      # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP 3;      # pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            CAR;        # int : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            GET;        # option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            IF_SOME
                              {
                                # of_some: Get-item:356 # @some : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                              }
                              {
                                PUSH int 356; # int : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                FAILWITH;   # FAILED
                              }; # @some : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            CAR;        # pair (pair nat bool) (pair address (pair string string)) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            GET 3;      # address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            # self.data.balances[approver.value].approvals[self.data.pending_cosmos_txs[params._tx_id].tz_sender] += amt.value # address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP 4;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP 6;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            IF_SOME
                              {}
                              {
                                PUSH int 357; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                                FAILWITH;   # FAILED
                              }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP;        # map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DIG 11;     # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            GET 5;      # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            DUP 12;     # pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            CAR;        # int : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            GET;        # option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            IF_SOME
                              {
                                # of_some: Get-item:350 # @some : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                              }
                              {
                                PUSH int 350; # int : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                                FAILWITH;   # FAILED
                              }; # @some : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            GET 8;      # address : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            DUP;        # address : address : map address nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            DUG 2;      # address : map address nat : address : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            GET;        # option nat : address : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            IF_SOME
                              {}
                              {
                                PUSH int 357; # int : address : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                                FAILWITH;   # FAILED
                              }; # @some : address : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            DUP 11;     # nat : @some : address : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            ADD;        # nat : address : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            SOME;       # option nat : address : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            SWAP;       # address : option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            UPDATE;     # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            UPDATE 1;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            # self.data.balances[approver.value].balance += amt.value # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : address : nat : pair int string
                            DIG 5;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            IF_SOME
                              {}
                              {
                                PUSH int 358; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                                FAILWITH;   # FAILED
                              }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            DIG 7;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                            SWAP;       # pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }
                          {
                            # self.data.balances[self.data.pending_cosmos_txs[params._tx_id].tz_sender].balance += amt.value # nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP 3;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            UNPAIR;     # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            SWAP;       # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                            DIG 7;      # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            GET 5;      # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            DUP 8;      # pair int string : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            CAR;        # int : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            GET;        # option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            IF_SOME
                              {
                                # of_some: Get-item:350 # @some : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                              }
                              {
                                PUSH int 350; # int : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                                FAILWITH;   # FAILED
                              }; # @some : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            GET 8;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            IF_SOME
                              {}
                              {
                                PUSH int 360; # int : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                                FAILWITH;   # FAILED
                              }; # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : nat : pair int string
                            DIG 7;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            UPDATE;     # big_map address (pair (map address nat) nat) : address : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            SWAP;       # address : big_map address (pair (map address nat) nat) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : pair int string
                            PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                            SWAP;       # pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                          }; # pair int string : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        # del self.data.pending_cosmos_txs[params._tx_id] # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        DUP;        # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        GET 5;      # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        NONE (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))); # option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : pair int string
                        DIG 3;      # pair int string : option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        CAR;        # int : option (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        UPDATE;     # map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address)))) : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        UPDATE 5;   # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    # == white_list ==
                    # sp.verify(sp.to_address(sp.implicit_account(sp.hash_key(params))) == sp.sender) # key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP;        # key : key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    HASH_KEY;   # key_hash : key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IMPLICIT_ACCOUNT; # contract unit : key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    ADDRESS;    # address : key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SENDER;     # @sender : address : key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    COMPARE;    # int : key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    EQ;         # bool : key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: sp.to_address(sp.implicit_account(sp.hash_key(params))) == sp.sender"; # string : key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }; # key : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : key
                    # self.data.key_mapper[sp.sender] = params # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))) : key
                    UNPAIR;     # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : key
                    UNPAIR;     # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : key
                    SWAP;       # pair int (big_map address key) : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : key
                    UNPAIR;     # int : big_map address key : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : key
                    SWAP;       # big_map address key : int : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)) : key
                    DIG 4;      # key : big_map address key : int : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SOME;       # option key : big_map address key : int : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SENDER;     # @sender : option key : big_map address key : int : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    UPDATE;     # big_map address key : int : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # int : big_map address key : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PAIR;       # pair int (big_map address key) : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    SWAP;       # pair address (big_map address (pair (map address nat) nat)) : pair int (big_map address key) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PAIR;       # pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key)) : pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))
                    PAIR;       # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
              }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
          }; # pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
        NIL operation; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
      }; # list operation : pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat)))
    PAIR;       # pair (list operation) (pair (pair (pair address (big_map address (pair (map address nat) nat))) (pair int (big_map address key))) (pair (pair (big_map string bytes) bool) (pair (map int (pair (pair (pair nat bool) (pair address (pair string string))) (pair (pair string timestamp) (pair int (pair string address))))) (pair (big_map nat (pair nat (map string bytes))) nat))))
  };
